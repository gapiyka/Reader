using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.IO;
using UnityEngine;

public class ParserTests
{
    [Test]
    public void TextToBookEmptyUnitTest1()
    {
        //ARRANGE
        int expectedCount = 0;
        string inputText = "";

        //ACT
        List<string> resultList = Parser.TextToBook(inputText);
        int pagesCount = resultList.Count;
        Action action = () => { string e = resultList[0]; };

        //ASSERT
        Assert.AreEqual(expectedCount, pagesCount);
        Assert.Throws<ArgumentOutOfRangeException>(() => action());
    }
    
    [Test]
    public void TextToBookLongUnitTest()
    {
        //ARRANGE
        string inputText = "Практикум. Кафедра ІПІ ФІОТ НТУУ «КПІ». Лектор – Крамар ЮМ\n" +
        "\n" +
        "Лабораторна робота 5\n" +
        "\n" +
        "Ознайомлення з технологією ASP.Net Web API для розробки Web-застосувань для .Net\n" +
        "\n" +
        "Мета лабораторної роботи – навчитися створювати Web-застосування, використовуючи технологію ASP.Net Web API.\n" +
        "\n" +
        "Завдання\n" +
        "\n" +
        "У трирівневій програмній системі, архітектуру якої було розроблено за вказівками лабораторної роботи №3, реалізувати презентаційний рівень (PL) з використанням Web-застосування ASP.Net Web API:\n" +
        "\n" +
        "а) створити контролери для звертання до функціоналу бізнес - логіки, щоб виконати запити користувача(додати замовлення, створити рахунок до сплати, знайти книгу за певною назвою чи автором тощо);\n" +
        "б) створити моделі для передачі за їх допомогою даних для відображення представленню чи отримання даних з форми у представленні для передачі їх певному методові дії контролера(замовлення, рахунок, книга, тощо); дані для представлення, що  повертають методи Web API, мають бути .Net - типів, сумісних з форматом JSON.\n" +
        "в) додати та продемонструвати вбудований засіб документації help page чи swagger для створеного WEB-застосування.\n" +
        "\n" +
        "Варіанти\n" +
        "\n" +"\n" +
        "Номер варіанта\n" +
        "\n" +"\n" +
        "Предметна галузь Функціональні вимоги\n" +
        "\n" +"\n" +"\n" +
        "1   Ресторан.Формування замовлень.\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "2   Бібліотека.Облік формулярів\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "3   Театральна каса. Розповсюдження квитків\n" +
        "\n" +"\n" +
        "Страви складаються із інгредієнтів. Інгредієнти можуть складати різні страви. Страви складають прайсліст, в якому вказано ціну для різних порцій страви. Замовлення може містити в собі набір декількох порцій різних страв.\n" +
        "Функціональні вимоги: складання страв та меню, формування замовлень.\n" +
        "Каталог літератури надає функції пошуку джерел за назвою, автором та тематикою. Зареєстровані читачі мають можливість користуватись літературою за умови не більше 10 найменувань у формулярі та при наявності екземпляру у сховищі.\n" +
        "Функціональні вимоги: ведення каталогу та керування користуванням літературою\n" +
        "Афіша вистав надає функції пошуку потрібної вистави за автором, назвою, жанром та датою.Кожній виставі відповідає кількість квитків різної вартості.Квитки можна безпосередньо продати чи попередньо забронювати та згодом перевести їх у стан проданих.\n" +
        "\n" +"\n" +"1\n" +
        "Практикум.Кафедра ІПІ ФІОТ НТУУ «КПІ». Лектор – Крамар ЮМ\n" +
        "\n" +"\n" +
        "Номер варіанта\n" +
        "\n" +"\n" +
        "Предметна галузь    Функціональні вимоги\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +
        "4   Гаманець.Керування власним бюджетом та фінансами\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "5   Склад.Облік товарів\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "6   Соціальна мережа. Комунікації між членами мережі\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "7   Планувальник завдань. Розподіл та контроль за виконанням завдань членами команди проекту\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "8   Готель.Сервіс бронювання номерів\n" +
        "\n" +"\n" +"\n" +"\n" +"\n" +"\n" +"\n" +
        "9   Реєстратура лікарні. Запис до лікарів на прийом\n" +
        "\n" +
        "Функціональні вимоги: ведення афіши вистав та продаж квитків\n" +
        "Власний бюджет складається з декількох рахунків, які поповнюються за заданими статтями прибутку.Гроші цих рахунків можуть бути переведені з одного на інший, можуть витрачатись за заданими статтями витрат.Підсумовуючи витрати та прибутки, можливо отримати інформацію, скільки було витрачено/ отримано загалом / за певною статтею по заданому рахунку.\n" +
        "Функціональні вимоги: ведення власного бюджету та отримання звітної інформації по рахунках\n" +
        "На складі зберігаються товари, які можуть бути відпущені замовнику зі складу.Товари можливо заказати до продажу навіть при відсутності його на складі. При відсутності товару потрібно записати його у чергу на придбання та завезення на склад. Після доставки відсутніх товарів на склад відвантаження за замовленням може бути виконано. Функціональні вимоги: облік товарів на складі та їх реалізація\n" +
        "Соціальну мережу складають групи її членів, пов’язаних між собою відносинами дружності.Кожний її член може керувати цими відносинами, а саме додавати до своєї мережи друзів: запрошувати до своїх друзів та просити запрошення для себе.Друзі можуть обмінюватись повідомленнями та передивлятись свої розмови у мережі.\n" +
        "Функціональні вимоги: створення соціальної мережі та забезпечення спілкування в ній";
        List<string> list = new List<string>() { "Практикум. Кафедра ІПІ ФІОТ НТУУ «КПІ». Лектор – Крамар ЮМ\n" +
        "\n" +
        "Лабораторна робота 5\n" +
        "\n" +
        "Ознайомлення з технологією ASP.Net Web API для розробки Web-застосувань для .Ne-\n" +
        "t\n" +
        "\n" +
        "Мета лабораторної роботи – навчитися створювати Web-застосування, використовуюч-\n" +
        "и технологію ASP.Net Web API.\n" +
        "\n" +
        "Завдання\n" +
        "\n" +
        "У трирівневій програмній системі, архітектуру якої було розроблено за вказівкам-\n" +
        "и лабораторної роботи №3, реалізувати презентаційний рівень (PL) з використанням-\n" +
        " Web-застосування ASP.Net Web API:\n" +
        "\n" +
        "а) створити контролери для звертання до функціоналу бізнес - логіки, щоб викона-\n" + 
        "ти запити користувача(додати замовлення, створити рахунок до сплати, знайти книг-\n" +
        "у за певною назвою чи автором тощо);\n" +
        "б) створити моделі для передачі за їх допомогою даних для відображення представ-\n" +
        "ленню чи отримання даних з форми у представленні для передачі їх певному методов-\n" +
        "і дії контролера(замовлення, рахунок, книга, тощо); дані для представлення, що  \n" +
        "повертають методи Web API, мають бути .Net - типів, сумісних з форматом JSON.\n" +
        "в) додати та продемонструвати вбудований засіб документації help page чи swagge-\n" +
        "r для створеного WEB-застосування.\n" +
        "\n" +
        "Варіанти\n" +
        "\n" +
        "Номер варіанта\n" +
        "\n" +
        "Предметна галузь Функціональні вимоги\n" +
        "\n" +
        "1   Ресторан.Формування замовлень.\n" +
        "\n" +
        "2   Бібліотека.Облік формулярів\n" +
        "\n" +
        "3   Театральна каса. Розповсюдження квитків\n" +
        "\n" +
        "Страви складаються із інгредієнтів. Інгредієнти можуть складати різні страви. \n" +
        "Страви складають прайсліст, в якому вказано ціну для різних порцій страви. Замов-\n" +
        "лення може містити в собі набір декількох порцій різних страв.\n" +
        "Функціональні вимоги: складання страв та меню, формування замовлень.\n" +
        "Каталог літератури надає функції пошуку джерел за назвою, автором та тематикою.-\n" +
        " Зареєстровані читачі мають можливість користуватись літературою за умови не біл-\n" +
        "ьше 10 найменувань у формулярі та при наявності екземпляру у сховищі.\n",
        "Функціональні вимоги: ведення каталогу та керування користуванням літературою\n" +
        "Афіша вистав надає функції пошуку потрібної вистави за автором, назвою, жанром \n" +
        "та датою.Кожній виставі відповідає кількість квитків різної вартості.Квитки можн-\n" +
        "а безпосередньо продати чи попередньо забронювати та згодом перевести їх у стан \n" +
        "проданих.\n" +
        "\n" +
        "1\n" +
        "Практикум.Кафедра ІПІ ФІОТ НТУУ «КПІ». Лектор – Крамар ЮМ\n" +
        "\n" +
        "Номер варіанта\n" +
        "\n" +
        "Предметна галузь    Функціональні вимоги\n" +
        "\n" +
        "4   Гаманець.Керування власним бюджетом та фінансами\n" +
        "\n" +
        "5   Склад.Облік товарів\n" +
        "\n" +
        "6   Соціальна мережа. Комунікації між членами мережі\n" +
        "\n" +
        "7   Планувальник завдань. Розподіл та контроль за виконанням завдань члена-\n" +
        "ми команди проекту\n" +
        "\n" +
        "8   Готель.Сервіс бронювання номерів\n" +
        "\n" +
        "9   Реєстратура лікарні. Запис до лікарів на прийом\n" +
        "\n" +
        "Функціональні вимоги: ведення афіши вистав та продаж квитків\n" +
        "Власний бюджет складається з декількох рахунків, які поповнюються за заданими с-\n" +
        "таттями прибутку.Гроші цих рахунків можуть бути переведені з одного на інший, мо-\n" +
        "жуть витрачатись за заданими статтями витрат.Підсумовуючи витрати та прибутки, м-\n" +
        "ожливо отримати інформацію, скільки було витрачено/ отримано загалом / за певною-\n" +
        " статтею по заданому рахунку.\n" +
        "Функціональні вимоги: ведення власного бюджету та отримання звітної інформації \n" +
        "по рахунках\n" +
        "На складі зберігаються товари, які можуть бути відпущені замовнику зі складу.То-\n" +
        "вари можливо заказати до продажу навіть при відсутності його на складі. При відс-\n" +
        "утності товару потрібно записати його у чергу на придбання та завезення на склад-\n" +
        ". Після доставки відсутніх товарів на склад відвантаження за замовленням може бу-\n" +
        "ти виконано. Функціональні вимоги: облік товарів на складі та їх реалізація\n" +
        "Соціальну мережу складають групи її членів, пов’язаних між собою відносинами др-\n" +
        "ужності.Кожний її член може керувати цими відносинами, а саме додавати до своєї \n" +
        "мережи друзів: запрошувати до своїх друзів та просити запрошення для себе.Друзі \n" +
        "можуть обмінюватись повідомленнями та передивлятись свої розмови у мережі.\n" +
        "Функціональні вимоги: створення соціальної мережі та забезпечення спілкування в-\n" +
        " ній"};

        //ACT
        List<string> resultList = Parser.TextToBook(inputText);
        int pagesCount = resultList.Count;

        //ASSERT
        Assert.AreEqual(list.Count, pagesCount);
        Assert.AreEqual(list[0], resultList[0]);
        Assert.AreEqual(list[1], resultList[1]);
    }

    [Test]
    public void TextToBookCLRFUnitTest()
    {
        //ARRANGE
        string inputText = "Практикум.\r\n\r\nПрактикум2.\r\n";
        List<string> list = new List<string>() { "Практикум.\n\nПрактикум2.\n" };

        //ACT
        List<string> resultList = Parser.TextToBook(inputText);
        int pagesCount = resultList.Count;

        //ASSERT
        Assert.AreEqual(list.Count, pagesCount);
        Assert.AreEqual(list[0], resultList[0]);
    }

    [Test]
    public void TextToBookExtraLinesTrimmerUnitTest()
    {
        //ARRANGE
        string inputText = "\nПрактикум.\r\n\r\n\n\nПрактикум2.\r\n";
        List<string> list = new List<string>() { "\nПрактикум.\n\nПрактикум2.\n" };

        //ACT
        List<string> resultList = Parser.TextToBook(inputText);
        int pagesCount = resultList.Count;

        //ASSERT
        Assert.AreEqual(list.Count, pagesCount);
        Assert.AreEqual(list[0], resultList[0]);
    }
}
